{"ast":null,"code":"var _jsxFileName = \"/Users/prateek/Downloads/home-master/src/components/home/Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Jumbotron } from \"./migration\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null\n};\nconst API = \"https://api.github.com\"; // const gitHubQuery = \"/repos?sort=updated&direction=desc\";\n// const specficQuerry = \"https://api.github.com/repos/hashirshoaeb/\";\n\nconst Project = _ref => {\n  _s();\n\n  let {\n    heading,\n    username,\n    length,\n    specfic\n  } = _ref;\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\n  const specficReposAPI = `${API}/repos/${username}`;\n  const dummyProjectsArr = new Array(length + specfic.length).fill(dummyProject);\n  const [projectsArray, setProjectsArray] = useState([]);\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n\n    try {\n      // getting all repos\n      const response = await axios.get(allReposAPI); // slicing to the length\n\n      repoList = [...response.data.slice(0, length)]; // adding specified repos\n\n      try {\n        for (let repoName of specfic) {\n          const response = await axios.get(`${specficReposAPI}/${repoName}`);\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      } // setting projectArray\n      // TODO: remove the duplication.\n\n\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, length, specfic, specficReposAPI]);\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n  return /*#__PURE__*/_jsxDEV(Jumbotron, {\n    fluid: true,\n    id: \"projects\",\n    className: \"bg-light m-0\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"display-4 pb-5 text-center\",\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: projectsArray.length ? projectsArray.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          id: `project-card-${index}`,\n          value: project\n        }, `project-card-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)) : dummyProjectsArr.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          id: `dummy-${index}`,\n          value: project\n        }, `dummy-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Project, \"G5dpdOZzE5rK+Ni7q0RvIF0vkjM=\");\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Jumbotron","Row","ProjectCard","axios","dummyProject","name","description","svn_url","stargazers_count","languages_url","pushed_at","API","Project","heading","username","length","specfic","allReposAPI","specficReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","response","get","data","slice","repoName","push","error","console","message","map","project","index"],"sources":["/Users/prateek/Downloads/home-master/src/components/home/Project.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Jumbotron } from \"./migration\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null,\n};\nconst API = \"https://api.github.com\";\n// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\n// const specficQuerry = \"https://api.github.com/repos/hashirshoaeb/\";\n\nconst Project = ({ heading, username, length, specfic }) => {\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\n  const specficReposAPI = `${API}/repos/${username}`;\n  const dummyProjectsArr = new Array(length + specfic.length).fill(\n    dummyProject\n  );\n\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n    try {\n      // getting all repos\n      const response = await axios.get(allReposAPI);\n      // slicing to the length\n      repoList = [...response.data.slice(0, length)];\n      // adding specified repos\n      try {\n        for (let repoName of specfic) {\n          const response = await axios.get(`${specficReposAPI}/${repoName}`);\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n      // setting projectArray\n      // TODO: remove the duplication.\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, length, specfic, specficReposAPI]);\n\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n              <ProjectCard\n                key={`project-card-${index}`}\n                id={`project-card-${index}`}\n                value={project}\n              />\n            ))\n            : dummyProjectsArr.map((project, index) => (\n              <ProjectCard\n                key={`dummy-${index}`}\n                id={`dummy-${index}`}\n                value={project}\n              />\n            ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}